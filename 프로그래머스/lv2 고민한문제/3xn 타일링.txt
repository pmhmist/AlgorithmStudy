class Solution {
    public int solution(int n) {
        int answer = 0;
        long [] dp = new long[n+7];
        dp[2] = 3;
        dp[4] = 11;
        if(n%2 == 0){
            for(int i = 6; i <= n; i+= 2){
                dp[i] = (dp[i-2]*4) - dp[i-4];
                dp[i] = dp[i]%1000000007;
                if(dp[i] < 0) dp[i] += 1000000007;
            }
            answer = (int)dp[n];
        }
        return answer;
    }
}

==================
(질문게시판 글 참고)
점화식 마다 다르지만 덧셈으로 점화식을 만들었을 경우

long long 으로 int 범위를 벗어나는 경우를 고려해주거나

점화식에서 뺄셈을 사용하는 경우 음수 부분을 고려해 줘야합니다.

예를들어 mod를 99라고 했을 때 원래 나누지 않았다면 100 - 10 로 계산되어야 하는 값이

1 - 10 로 계산되면서 음수가 나오게 됩니다.

음수가 나온다면 나온값에 +mod를 해줘서 해결 할 수 있습니다.