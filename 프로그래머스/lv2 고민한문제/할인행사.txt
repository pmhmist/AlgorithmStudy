import java.util.*;

class Solution {
    public int solution(String[] want, int[] number, String[] discount) {
        int answer = 0;
        Map<String,Integer> map = new HashMap<>();
        int[] arr = new int[want.length];
       
        for(int i = 0; i < want.length; i++){
            map.put(want[i],i);
        }
        int mapnum = want.length;
        
        for(int turn = 0; turn < discount.length; turn++){
            if(!map.containsKey(discount[turn])){
                map.put(discount[turn],mapnum);
                mapnum++;
            }
            int key = map.get(discount[turn]);
            if(turn < 9){
                if(key < want.length){
                    arr[key]++;
                }
            }
            else{
                if(key < want.length){
                    arr[key]++;
                }
                
                boolean judge = true;
                for(int i = 0; i < want.length; i++){
                    if(arr[i] != number[i]){
                        judge = false;
                        break;
                    }
                }
                
                if(judge){
                    answer++;
                } 
                
                int prev = map.get(discount[turn-9]);
                if(prev < want.length){
                    arr[prev]--;
                }
            }
        }
        
        return answer;
    }
}