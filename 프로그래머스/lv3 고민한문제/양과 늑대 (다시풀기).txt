import java.util.*;

class Solution {
    
    static ArrayList<Integer>[] graph;
    static int[] ginfo;
    static int size;
    static int answer;
    
    public static void solve(int idx, int wolf, int sheep, boolean[] vis){
        if(ginfo[idx] == 0) sheep++;
        else wolf++;
        
        if(wolf >= sheep) return;
        if(answer < sheep) answer = sheep;
        
        boolean[] vis2 = vis.clone();
        vis2[idx] = true;
        
        for(int i = 0; i < size; i++){
            if(vis2[i]){
                for(int nxt : graph[i]){
                    if(vis2[nxt]) continue;
                    solve(nxt,wolf,sheep,vis2);
                }
            }
        }
        
    }
    
    public int solution(int[] info, int[][] edges) {
        answer = 0;
        size = info.length;
        ginfo = info;
        graph = new ArrayList[size];
        for(int i = 0; i < size; i++){
            graph[i] = new ArrayList<>();
        }
        
        for(int i = 0; i < edges.length; i++){
            int x = edges[i][0];
            int y = edges[i][1];
            
            graph[x].add(y);
            graph[y].add(x);
        }
        
        boolean[] vis = new boolean[size];
        solve(0,0,0,vis);
        
        
        return answer;
    }
}