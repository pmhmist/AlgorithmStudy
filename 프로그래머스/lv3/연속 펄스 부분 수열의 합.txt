import java.util.*;

class Solution {
    public long solution(int[] sequence) {
        long answer = Long.MIN_VALUE;
        
        long[] dp1 = new long[sequence.length];
        long[] dp2 = new long[sequence.length];
        
        for(int i = 0; i < sequence.length; i++){
            long cur1 = (long)sequence[i];
            long cur2 = (long)(-1*cur1);
            
            if(i%2 == 0){
                if(i == 0){
                    dp1[i] = cur1;
                    dp2[i] = cur2;
                }
                else{
                    dp1[i] = Math.max(dp1[i-1] + cur1, cur1);
                    dp2[i] = Math.max(dp2[i-1] + cur2,cur2);
                }
            }
            else{
                dp1[i] = Math.max(dp1[i-1] + cur2, cur2);
                dp2[i] = Math.max(dp2[i-1] + cur1,cur1);
            }
            
        }
        
        for(int i = 0; i < sequence.length; i++){
            if(answer < dp1[i]) answer = dp1[i];
            if(answer < dp2[i]) answer = dp2[i];
        }
            
        return answer;
    }
}