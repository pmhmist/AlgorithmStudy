import java.util.*;

class Solution {
    public static class Pair{
        int a;
        int b;
        int c;
        int d;
        
        Pair(int a, int b, int c, int d){
            this.a = a;
            this.b = b;
            this.c = c;
            this.d = d;
        }
    }
    
    public int[] solution(int target) {
        int[] answer = new int[2];
        int mx = 200000;
        int cnt1 = 0; // 총 던짓 횟수
        int cnt2 = 0; // 불 또는 싱글을 맞춘 횟수
        
        Pair[] dp = new Pair[target+1];
        for(int i = 0; i <= target; i++){
            dp[i] = new Pair(mx,mx,mx,mx);
        }
        dp[0] = new Pair(0,0,0,0);
        
        for(int base = 1; base <= target; base++){
            for(int i = 1; i <= 20; i++){
                for(int j = 1; j <= 3; j++){
                    int cur = i*j;
                    if(cur > base) break;
                    Pair tmp;
                    if(j == 1){
                        tmp = new Pair(dp[base-cur].a + 1,dp[base-cur].b,dp[base-cur].c,dp[base-cur].d);
                    }
                    else if (j == 2){
                        tmp = new Pair(dp[base-cur].a,dp[base-cur].b + 1,dp[base-cur].c,dp[base-cur].d);
                    }
                    else{
                        tmp = new Pair(dp[base-cur].a,dp[base-cur].b,dp[base-cur].c + 1,dp[base-cur].d);
                    }
                    
                    int num1 = dp[base].a + dp[base].b + dp[base].c + dp[base].d;
                    int num2 = tmp.a + tmp.b + tmp.c + tmp.d;
                    
                    int num3 = dp[base].a + dp[base].d;
                    int num4 = tmp.a + tmp.d;
                    
                    if(num1 > num2){
                        dp[base].a = tmp.a;
                        dp[base].b = tmp.b;
                        dp[base].c = tmp.c;
                        dp[base].d = tmp.d;
                    }
                    else if(num1 == num2){
                        if(num3 < num4){
                            dp[base].a = tmp.a;
                            dp[base].b = tmp.b;
                            dp[base].c = tmp.c;
                            dp[base].d = tmp.d;
                        }
                    }
                }
            }
            
            if(base >= 50){
                int cur = 50;
                Pair tmp = new Pair(dp[base-cur].a,dp[base-cur].b,dp[base-cur].c ,dp[base-cur].d + 1);
                
                int num1 = dp[base].a + dp[base].b + dp[base].c + dp[base].d;
                int num2 = tmp.a + tmp.b + tmp.c + tmp.d;

                int num3 = dp[base].a + dp[base].d;
                int num4 = tmp.a + tmp.d;

                if(num1 > num2){
                    dp[base].a = tmp.a;
                    dp[base].b = tmp.b;
                    dp[base].c = tmp.c;
                    dp[base].d = tmp.d;
                }
                else if(num1 == num2){
                    if(num3 < num4){
                        dp[base].a = tmp.a;
                        dp[base].b = tmp.b;
                        dp[base].c = tmp.c;
                        dp[base].d = tmp.d;
                    }
                }
            }
        }
        
        answer[0] = dp[target].a + dp[target].b + dp[target].c + dp[target].d;
        answer[1] = dp[target].a + dp[target].d;
        
        return answer;
    }
}