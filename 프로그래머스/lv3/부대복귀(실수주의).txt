import java.util.*;

class Solution {
    public int[] solution(int n, int[][] roads, int[] sources, int destination) {
        int[] answer = new int[sources.length];
        ArrayList<Integer>[] arr = new ArrayList[n+1];
        
        for(int i = 0; i <= n; i++){
            arr[i] = new ArrayList<>();
        }
        
        for(int i = 0; i < roads.length; i++){
            int x = roads[i][0];
            int y = roads[i][1];
            
            arr[x].add(y);
            arr[y].add(x);
        }
        
        int[] vis = new int[n+1];
        vis[destination] = 1;
        Queue<Integer> q = new ArrayDeque<>();
        q.offer(destination);

        while(!q.isEmpty()){
            int cur = q.peek();

            q.poll();

            for(int nxt : arr[cur]){
                if(vis[nxt] != 0) continue;
                vis[nxt] = vis[cur] + 1;
                q.offer(nxt);
            }
        }
        
        for(int i = 0; i < sources.length; i++){
            
            if(vis[sources[i]] == 0){
                answer[i] = -1;
            }
            else{
                answer[i] = vis[sources[i]]-1;
            }
        }
        
        return answer;
    }
}