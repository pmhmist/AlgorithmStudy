import java.util.*;

class Solution {
    public int[] solution(String[] gems) {
        Map<String,Integer> map = new HashMap<>();
        int mapnum = 0;
        
        for(int i = 0; i < gems.length; i++){
            if(!map.containsKey(gems[i])){
                map.put(gems[i],mapnum);
                mapnum++;
            }
        }
        
        int[] vis = new int[mapnum];
        int cnt = 0;
        
        int l = -1;
        int r = 1_000_000_000;
        
        int left = 0;
        int right = -1;
        
        while(true){            
            if(cnt < mapnum){
                right++;
                if(right >= gems.length) break;
                if(vis[map.get(gems[right])] == 0) cnt += 1;
                vis[map.get(gems[right])] += 1;
            }
            else{
                if(left >= gems.length) break;
                if(vis[map.get(gems[left])] == 1) cnt -= 1;
                vis[map.get(gems[left])] -= 1;
                left++;
            }
            
            if(cnt == mapnum){
                int ck1 = r - l;
                int ck2 = right - left;
                if(ck2 < ck1){
                    l = left;
                    r = right;
                }
                
            }
        }
        
        
        int[] answer = new int[2];
        answer[0] = l+1;
        answer[1] = r+1;
        return answer;
    }
}