import java.util.*;

class Solution {
    public int solution(int n, int[][] results) {
        int answer = 0;
        ArrayList<Integer>[] arr = new ArrayList[n+1];
        ArrayList<Integer>[] arr2 = new ArrayList[n+1];
        
        for(int i = 0; i <= n; i++){
            arr[i] = new ArrayList<>();
            arr2[i] = new ArrayList<>();
        }
        
        for(int i = 0; i < results.length; i++){
            arr[results[i][0]].add(results[i][1]);
            arr2[results[i][1]].add(results[i][0]);
        }
        
        int[] cnt = new int[n+1];
        
        for(int i = 1; i <= n; i++){
            Queue<Integer> q = new ArrayDeque<>();
            q.offer(i);
            boolean[] vis = new boolean[n+1];
            vis[i] = true;
            while(!q.isEmpty()){
                int cur = q.peek();
                q.poll();
                for(int nxt : arr[cur]){
                    if(vis[nxt]) continue;
                    vis[nxt] = true;
                    q.offer(nxt);
                    cnt[nxt]++;
                }
            }
            
            q.offer(i);
            vis = new boolean[n+1];
            vis[i] = true;
            while(!q.isEmpty()){
                int cur = q.peek();
                q.poll();
                for(int nxt : arr2[cur]){
                    if(vis[nxt]) continue;
                    vis[nxt] = true;
                    q.offer(nxt);
                    cnt[nxt]++;
                }
            }
        }
        
        for(int i = 1; i <= n; i++){
            if(cnt[i] == n-1) answer++;
        }
        
        
        
        
        return answer;
    }
}