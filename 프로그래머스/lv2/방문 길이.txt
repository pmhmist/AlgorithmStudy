import java.util.*;

class Solution {
    
    static int[] dx = {-1,0,1,0};
    static int[] dy = {0,1,0,-1};
    
    public int solution(String dirs) {
        int answer = 0;
        
        int[][] board = new int[30][30];
        boolean[][][][] vis = new boolean[30][30][30][30];
        int x = 20;
        int y = 20;
        vis[x][y][x][y] = true;
        
        for(int i = 0; i < dirs.length(); i++){
            char ck = dirs.charAt(i);
            if(ck == 'U'){
                int nx = x + dx[0];
                int ny = y + dy[0];
                if(nx > 25 || nx < 15 || ny > 25 || ny < 15) continue;
                if(!vis[x][y][nx][ny]) answer++;
                vis[x][y][nx][ny] = true;
                vis[nx][ny][x][y] = true;
                x = nx;
                y = ny;
            }
            else if(ck == 'R'){
                int nx = x + dx[1];
                int ny = y + dy[1];
                if(nx > 25 || nx < 15 || ny > 25 || ny < 15) continue;
                if(!vis[x][y][nx][ny]) answer++;
                vis[x][y][nx][ny] = true;
                vis[nx][ny][x][y] = true;
                x = nx;
                y = ny;
            }
            else if(ck == 'D'){
                int nx = x + dx[2];
                int ny = y + dy[2];
                if(nx > 25 || nx < 15 || ny > 25 || ny < 15) continue;
                if(!vis[x][y][nx][ny]) answer++;
                vis[x][y][nx][ny] = true;
                vis[nx][ny][x][y] = true;
                x = nx;
                y = ny;
            }
            else{
                int nx = x + dx[3];
                int ny = y + dy[3];
                if(nx > 25 || nx < 15 || ny > 25 || ny < 15) continue;
                if(!vis[x][y][nx][ny]) answer++;
                vis[x][y][nx][ny] = true;
                vis[nx][ny][x][y] = true;
                x = nx;
                y = ny;
            }
        }
        
        return answer;
    }
}