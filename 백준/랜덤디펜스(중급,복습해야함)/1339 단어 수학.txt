import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.*;

public class Main {

    static String[] arr;
    static char[] charr;
    static Set<Character> set;
    static Map<Character,Integer> map;
    static int n;
    static int num = 0;
    static int[] sv;
    static boolean[] vis;
    static int ans;

    public static void solve(int cur){
        if(cur == num){
            int tmp = 0;
            for(int i = 0; i < num; i++){
                map.put(charr[i],sv[i]);
            }

            for(int i = 0; i < n; i++){
                int len = arr[i].length();
                int sz = (int)Math.pow(10,len-1);
                for(int j = 0; j < len; j++){
                    tmp += map.get(arr[i].charAt(j)) * sz;
                    sz /= 10;
                }
            }

            if(ans < tmp) ans = tmp;
            return;
        }

        for(int i = 0; i < 10; i++){
            if(vis[i]) continue;
            vis[i] = true;
            sv[cur] = i;
            solve(cur+1);
            vis[i] = false;
        }
    }

    public static void main(String[] args) throws IOException {

        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st = new StringTokenizer(br.readLine());

        n = Integer.parseInt(st.nextToken());
        arr = new String[n];
        for(int i = 0; i < n; i++){
            arr[i] = br.readLine();
        }
        set = new HashSet<>();

        for(int i = 0; i < n; i++){
            for(int j = 0; j < arr[i].length(); j++){
                set.add(arr[i].charAt(j));
            }
        }

        num = set.size();
        sv = new int[num];
        vis = new boolean[10];
        charr = new char[num];
        map = new HashMap<>();

        int idx = 0;
        for(Character c : set){
            charr[idx] = c;
            idx++;
        }

        solve(0);

        System.out.println(ans);

    }
}
